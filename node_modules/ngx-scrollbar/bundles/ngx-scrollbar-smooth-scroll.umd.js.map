{"version":3,"file":"ngx-scrollbar-smooth-scroll.umd.js","sources":["../../../projects/ngx-scrollbar/smooth-scroll/src/smooth-scroll.model.ts","../../../projects/ngx-scrollbar/smooth-scroll/src/smooth-scroll-manager.ts","../../../projects/ngx-scrollbar/smooth-scroll/src/smooth-scroll.ts","../../../projects/ngx-scrollbar/smooth-scroll/src/smooth-scroll.module.ts","../../../projects/ngx-scrollbar/smooth-scroll/src/ngx-scrollbar-smooth-scroll.ts"],"sourcesContent":["import { ElementRef, InjectionToken } from '@angular/core';\nimport { _Left, _Top, _XAxis, _YAxis } from '@angular/cdk/scrolling';\n\nexport const SMOOTH_SCROLL_OPTIONS = new InjectionToken<SmoothScrollOptions>('SMOOTH_SCROLL_OPTIONS');\n\nexport type SmoothScrollElement = HTMLElement | ElementRef<HTMLElement> | string;\n\nexport type SmoothScrollToOptions = _XAxis & _YAxis & SmoothScrollOptions;\n\nexport type SmoothScrollToElementOptions = _Top & _Left & SmoothScrollOptions;\n\nexport interface SmoothScrollOptions {\n  duration?: number;\n  easing?: BezierEasingOptions;\n}\n\nexport interface SmoothScrollStep {\n  scrollable: HTMLElement;\n  startTime: number;\n  startX: number;\n  startY: number;\n  x: number;\n  y: number;\n  duration: number;\n  easing: (k: number) => number;\n  currentX?: number;\n  currentY?: number;\n}\n\nexport interface BezierEasingOptions {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n}\n","import { ElementRef, Inject, Injectable, PLATFORM_ID, Optional } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { getRtlScrollAxisType, RtlScrollAxisType } from '@angular/cdk/platform';\nimport { _Bottom, _Left, _Right, _Top, _Without } from '@angular/cdk/scrolling';\nimport { fromEvent, merge, of, Observable, Subject, Subscriber, animationFrameScheduler } from 'rxjs';\nimport { expand, finalize, take, takeUntil, takeWhile } from 'rxjs/operators';\nimport BezierEasing from 'bezier-easing';\nimport {\n  SMOOTH_SCROLL_OPTIONS,\n  SmoothScrollElement,\n  SmoothScrollStep,\n  SmoothScrollToElementOptions,\n  SmoothScrollToOptions\n} from './smooth-scroll.model';\n\n// @dynamic\n@Injectable({\n  providedIn: 'root'\n})\nexport class SmoothScrollManager {\n\n  // Default options\n  private readonly _defaultOptions: SmoothScrollToOptions;\n\n  // Keeps track of the ongoing SmoothScroll functions so they can be handled in case of duplication.\n  // Each scrolled element gets a destroyer stream which gets deleted immediately after it completes.\n  // Purpose: If user called a scroll function again on the same element before the scrolls completes,\n  // it cancels the ongoing scroll and starts a new one\n  private _onGoingScrolls = new Map<HTMLElement, Subject<void>>();\n\n  private get _w(): any {\n    return this._document.defaultView;\n  }\n\n  /**\n   * Timing method\n   */\n  private get _now() {\n    return this._w.performance && this._w.performance.now\n      ? this._w.performance.now.bind(this._w.performance)\n      : Date.now;\n  }\n\n  constructor(@Inject(DOCUMENT) private _document: any,\n              @Inject(PLATFORM_ID) private _platform: object,\n              @Optional() @Inject(SMOOTH_SCROLL_OPTIONS) customDefaultOptions: SmoothScrollToOptions) {\n    this._defaultOptions = {\n      duration: 468,\n      easing: {\n        x1: 0.42,\n        y1: 0,\n        x2: 0.58,\n        y2: 1\n      },\n      ...customDefaultOptions,\n    };\n  }\n\n  /**\n   * changes scroll position inside an element\n   */\n  private _scrollElement(el: HTMLElement, x: number, y: number): void {\n    el.scrollLeft = x;\n    el.scrollTop = y;\n  }\n\n  /**\n   * Handles a given parameter of type HTMLElement, ElementRef or selector\n   */\n  private _getElement(el: HTMLElement | ElementRef | string, parent?: HTMLElement): HTMLElement {\n    if (typeof el === 'string') {\n      return (parent || this._document).querySelector(el);\n    }\n    return coerceElement<HTMLElement>(el);\n  }\n\n  /**\n   * Initializes a destroyer stream, re-initializes it if the element is already being scrolled\n   */\n  private _initSmoothScroll(el: HTMLElement): Subject<void> {\n    if (this._onGoingScrolls.has(el)) {\n      this._onGoingScrolls.get(el)!.next();\n    }\n    return this._onGoingScrolls.set(el, new Subject<void>())!.get(el)!;\n  }\n\n  /**\n   * Checks if smooth scroll has reached, cleans up the smooth scroll stream and resolves its promise\n   */\n  private _isFinished(context: SmoothScrollStep, destroyed: Subject<void>, resolve: () => void): boolean {\n    if (context.currentX !== context.x || context.currentY !== context.y) {\n      return true;\n    }\n    destroyed.next();\n    resolve();\n    return false;\n  }\n\n  /**\n   * Terminates an ongoing smooth scroll\n   */\n  private _interrupted(el: HTMLElement, destroyed: Subject<void>): Observable<any> {\n    return merge(\n      fromEvent(el, 'wheel', { passive: true, capture: true }),\n      fromEvent(el, 'touchmove', { passive: true, capture: true }),\n      destroyed\n    ).pipe(take(1));\n  }\n\n  /**\n   * Deletes the destroyer function, runs if the smooth scroll has finished or interrupted\n   */\n  private _destroy(el: HTMLElement, destroyed: Subject<void>): void {\n    destroyed.complete();\n    this._onGoingScrolls.delete(el);\n  }\n\n  /**\n   * A function called recursively that, given a context, steps through scrolling\n   */\n  private _step(context: SmoothScrollStep): Observable<SmoothScrollStep> {\n    return new Observable((subscriber: Subscriber<SmoothScrollStep>) => {\n      let elapsed = (this._now() - context.startTime) / context.duration;\n\n      // avoid elapsed times higher than one\n      elapsed = elapsed > 1 ? 1 : elapsed;\n\n      // apply easing to elapsed time\n      const value = context.easing(elapsed);\n\n      context.currentX = context.startX + (context.x - context.startX) * value;\n      context.currentY = context.startY + (context.y - context.startY) * value;\n\n      this._scrollElement(context.scrollable, context.currentX, context.currentY);\n      // Proceed to the step\n      animationFrameScheduler.schedule(() => subscriber.next(context));\n    });\n  }\n\n  private _applyScrollToOptions(el: HTMLElement, options: SmoothScrollToOptions): Promise<void> {\n    if (!options.duration!) {\n      this._scrollElement(el, options!.left!, options!.top!);\n      return Promise.resolve();\n    }\n\n    // Initialize a destroyer stream, reinitialize it if the element is already being scrolled\n    const destroyed: Subject<void> = this._initSmoothScroll(el);\n\n    const context: SmoothScrollStep = {\n      scrollable: el,\n      startTime: this._now(),\n      startX: el.scrollLeft,\n      startY: el.scrollTop,\n      x: options.left == null ? el.scrollLeft : ~~options.left,\n      y: options.top == null ? el.scrollTop : ~~options.top,\n      duration: options.duration!,\n      easing: BezierEasing(options.easing!.x1!, options.easing!.y1!, options.easing!.x2!, options.easing!.y2!)\n    };\n\n    return new Promise(resolve => {\n      // Scroll each step recursively\n      of(null).pipe(\n        expand(() => this._step(context).pipe(\n          takeWhile((currContext: SmoothScrollStep) => this._isFinished(currContext, destroyed, resolve))\n        )),\n        takeUntil(this._interrupted(el, destroyed)),\n        finalize(() => this._destroy(el, destroyed))\n      ).subscribe();\n    });\n  }\n\n\n  /**\n   * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n   * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n   * left and right always refer to the left and right side of the scrolling container irrespective\n   * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n   * in an RTL context.\n   * @param scrollable element\n   * @param customOptions specified the offsets to scroll to.\n   */\n  scrollTo(scrollable: SmoothScrollElement, customOptions: SmoothScrollToOptions): Promise<void> {\n    if (isPlatformBrowser(this._platform)) {\n      const el = this._getElement(scrollable);\n      const isRtl = getComputedStyle(el).direction === 'rtl';\n      const rtlScrollAxisType = getRtlScrollAxisType();\n\n      const options: SmoothScrollToOptions = {\n        ...(this._defaultOptions as _Without<_Bottom & _Top>),\n        ...customOptions,\n        ...({\n          // Rewrite start & end offsets as right or left offsets.\n          left: customOptions.left == null ? (isRtl ? customOptions.end : customOptions.start) : customOptions.left,\n          right: customOptions.right == null ? (isRtl ? customOptions.start : customOptions.end) : customOptions.right\n        } as _Without<_Bottom & _Top>)\n      };\n\n      // Rewrite the bottom offset as a top offset.\n      if (options.bottom != null) {\n        (options as _Without<_Bottom> & _Top).top = el.scrollHeight - el.clientHeight - options.bottom;\n      }\n\n      // Rewrite the right offset as a left offset.\n      if (isRtl && rtlScrollAxisType !== RtlScrollAxisType.NORMAL) {\n        if (options.left != null) {\n          (options as _Without<_Left> & _Right).right = el.scrollWidth - el.clientWidth - options.left;\n        }\n\n        if (rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\n          options.left = options.right;\n        } else if (rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\n          options.left = options.right ? -options.right : options.right;\n        }\n      } else {\n        if (options.right != null) {\n          (options as _Without<_Right> & _Left).left = el.scrollWidth - el.clientWidth - options.right;\n        }\n      }\n      return this._applyScrollToOptions(el, options);\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Scroll to element by reference or selector\n   */\n  scrollToElement(scrollable: SmoothScrollElement, target: SmoothScrollElement, customOptions: SmoothScrollToElementOptions = {}): Promise<void> {\n    const scrollableEl = this._getElement(scrollable);\n    const targetEl = this._getElement(target, scrollableEl);\n    const options: SmoothScrollToOptions = {\n      ...customOptions,\n      ...{\n        left: targetEl.offsetLeft + (customOptions.left || 0),\n        top: targetEl.offsetTop + (customOptions.top || 0)\n      }\n    };\n    return targetEl ? this.scrollTo(scrollableEl, options) : Promise.resolve();\n  }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport { SmoothScrollManager } from './smooth-scroll-manager';\nimport { SmoothScrollElement, SmoothScrollToElementOptions, SmoothScrollToOptions } from './smooth-scroll.model';\n\n@Directive({\n  selector: '[smoothScroll], [smooth-scroll]',\n  exportAs: 'smoothScroll'\n})\nexport class SmoothScroll {\n\n  constructor(private element: ElementRef, private smoothScroll: SmoothScrollManager) {\n  }\n\n  scrollTo(options: SmoothScrollToOptions): Promise<void> | undefined {\n    return this.smoothScroll.scrollTo(this.element, options);\n  }\n\n  scrollToElement(target: SmoothScrollElement, options: SmoothScrollToElementOptions): Promise<void> | undefined {\n    return this.smoothScroll.scrollToElement(this.element, target, options);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SmoothScroll } from './smooth-scroll';\n\n@NgModule({\n  declarations: [SmoothScroll],\n  exports: [SmoothScroll]\n})\nexport class SmoothScrollModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["InjectionToken","coerceElement","Subject","merge","fromEvent","take","Observable","animationFrameScheduler","BezierEasing","of","expand","takeWhile","takeUntil","finalize","isPlatformBrowser","getRtlScrollAxisType","Injectable","Inject","DOCUMENT","PLATFORM_ID","Optional","Directive","ElementRef","NgModule"],"mappings":"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"}