import { ElementRef } from '@angular/core';
import { Directionality } from '@angular/cdk/bidi';
import { NgScrollbar } from '../../ng-scrollbar';
import { ThumbAdapter } from './thumb';
import { TrackXDirective, TrackYDirective } from '../track/track.directive';
export declare class ThumbXDirective extends ThumbAdapter {
    protected cmp: NgScrollbar;
    protected track: TrackXDirective;
    protected element: ElementRef;
    protected document: any;
    protected dir: Directionality;
    protected get clientProperty(): string;
    protected get pageProperty(): string;
    protected get viewportScrollSize(): number;
    protected get viewportScrollOffset(): number;
    get viewportScrollMax(): number;
    get dragStartOffset(): number;
    get size(): number;
    constructor(cmp: NgScrollbar, track: TrackXDirective, element: ElementRef, document: any, dir: Directionality);
    protected updateStyles(position: number, size: number): void;
    protected handleDrag(position: number, scrollMax: number): number;
    protected handleDirection(position: number, trackMax: number): number;
    protected setDragging(value: boolean): void;
    protected scrollTo(position: number): void;
}
export declare class ThumbYDirective extends ThumbAdapter {
    protected cmp: NgScrollbar;
    protected track: TrackYDirective;
    protected element: ElementRef;
    protected document: any;
    protected get pageProperty(): string;
    protected get viewportScrollSize(): number;
    protected get viewportScrollOffset(): number;
    get viewportScrollMax(): number;
    protected get clientProperty(): string;
    get dragStartOffset(): number;
    get size(): number;
    constructor(cmp: NgScrollbar, track: TrackYDirective, element: ElementRef, document: any);
    protected updateStyles(position: number, size: number): void;
    protected handleDrag(position: number): number;
    protected handleDirection(position: number): number;
    protected setDragging(value: boolean): void;
    protected scrollTo(position: number): void;
}
