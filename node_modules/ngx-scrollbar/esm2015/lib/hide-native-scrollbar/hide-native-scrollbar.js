import { Directive, ElementRef, Renderer2, RendererStyleFlags2 } from '@angular/core';
import { Subscription } from 'rxjs';
import { NativeScrollbarSizeFactory } from './native-scrollbar-size-factory';
export class HideNativeScrollbar {
    constructor(el, renderer, hideNativeScrollbar) {
        this.renderer = renderer;
        this.hideNativeScrollbar = hideNativeScrollbar;
        this._subscriber = Subscription.EMPTY;
        this._subscriber = hideNativeScrollbar.scrollbarSize.subscribe((size) => {
            this.renderer.setStyle(el.nativeElement, '--native-scrollbar-size', `-${size}px`, RendererStyleFlags2.DashCase);
        });
    }
    ngOnDestroy() {
        this._subscriber.unsubscribe();
    }
}
HideNativeScrollbar.decorators = [
    { type: Directive, args: [{
                selector: '[hideNativeScrollbar]'
            },] }
];
HideNativeScrollbar.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: NativeScrollbarSizeFactory }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlkZS1uYXRpdmUtc2Nyb2xsYmFyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXNjcm9sbGJhci9zcmMvbGliL2hpZGUtbmF0aXZlLXNjcm9sbGJhci9oaWRlLW5hdGl2ZS1zY3JvbGxiYXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLG1CQUFtQixFQUFhLE1BQU0sZUFBZSxDQUFDO0FBQ2pHLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDcEMsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFLN0UsTUFBTSxPQUFPLG1CQUFtQjtJQUk5QixZQUFZLEVBQWMsRUFDTixRQUFtQixFQUNuQixtQkFBK0M7UUFEL0MsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQUNuQix3QkFBbUIsR0FBbkIsbUJBQW1CLENBQTRCO1FBSmxELGdCQUFXLEdBQUcsWUFBWSxDQUFDLEtBQUssQ0FBQztRQUtoRCxJQUFJLENBQUMsV0FBVyxHQUFHLG1CQUFtQixDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFZLEVBQUUsRUFBRTtZQUM5RSxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLHlCQUF5QixFQUFFLElBQUssSUFBSyxJQUFJLEVBQUUsbUJBQW1CLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDcEgsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDakMsQ0FBQzs7O1lBakJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsdUJBQXVCO2FBQ2xDOzs7WUFObUIsVUFBVTtZQUFFLFNBQVM7WUFFaEMsMEJBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBSZW5kZXJlcjIsIFJlbmRlcmVyU3R5bGVGbGFnczIsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBOYXRpdmVTY3JvbGxiYXJTaXplRmFjdG9yeSB9IGZyb20gJy4vbmF0aXZlLXNjcm9sbGJhci1zaXplLWZhY3RvcnknO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbaGlkZU5hdGl2ZVNjcm9sbGJhcl0nXG59KVxuZXhwb3J0IGNsYXNzIEhpZGVOYXRpdmVTY3JvbGxiYXIgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuXG4gIHByaXZhdGUgcmVhZG9ubHkgX3N1YnNjcmliZXIgPSBTdWJzY3JpcHRpb24uRU1QVFk7XG5cbiAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsXG4gICAgICAgICAgICAgIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMixcbiAgICAgICAgICAgICAgcHJpdmF0ZSBoaWRlTmF0aXZlU2Nyb2xsYmFyOiBOYXRpdmVTY3JvbGxiYXJTaXplRmFjdG9yeSkge1xuICAgIHRoaXMuX3N1YnNjcmliZXIgPSBoaWRlTmF0aXZlU2Nyb2xsYmFyLnNjcm9sbGJhclNpemUuc3Vic2NyaWJlKChzaXplOiBudW1iZXIpID0+IHtcbiAgICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUoZWwubmF0aXZlRWxlbWVudCwgJy0tbmF0aXZlLXNjcm9sbGJhci1zaXplJywgYC0keyBzaXplIH1weGAsIFJlbmRlcmVyU3R5bGVGbGFnczIuRGFzaENhc2UpO1xuICAgIH0pO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5fc3Vic2NyaWJlci51bnN1YnNjcmliZSgpO1xuICB9XG59XG4iXX0=